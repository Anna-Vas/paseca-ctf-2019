#pragma once

#include <iostream>

#include <boost/asio.hpp>
#include <boost/uuid/uuid.hpp>            // uuid class
#include <boost/lexical_cast.hpp>
#include <boost/uuid/uuid_generators.hpp> // generators
#include <boost/uuid/uuid_io.hpp>  

#include "JsonParser.h"

using namespace boost::asio;
using ip::tcp;
using std::string;
using std::cout;
using std::endl;

class NetClient
{
public:
	NetClient();
	~NetClient();
	void connect(std::string ip, int port);
	std::string recv_command();
	int send(std::string data);
	std::string recv();
	std::string generate_uuid();

	std::string get_last_cmd()
	{
		return last_cmd;
	}

	std::string get_uuid()
	{
		return uuid;
	}

private:
	std::string uuid;

	std::string last_cmd;
	std::string ip;
	int port;

	boost::asio::io_service io_service;
	tcp::socket socket;
};

