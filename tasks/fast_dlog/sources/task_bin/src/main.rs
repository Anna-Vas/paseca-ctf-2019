extern crate num;

use num::bigint::BigUint;
use num::ToPrimitive;
use std::io::{self, Write};

fn powmod<T : Into<BigUint>>(a: T, b: T, c: T) -> u64 {
    let g = a.into();
    let x = b.into();
    let m = c.into();

    g.modpow(&x, &m).to_u64().unwrap()
}


fn hack_char(g: u64, m: u64, a: u64) -> char {
    for x in 0..m {
        if powmod(g, x, m) == a {
            return x.to_le_bytes()[0] as char;
        }
//        if x % 100000 == 0 {
//            println!("{}", x);
//        }
    }
    return '\0';
}


fn main() {
    let gk = [494, 591, 354, 667, 865, 743, 83, 835, 403, 511, 972, 718, 759, 487, 353, 194, 647, 824, 155, 623, 608, 149, 26, 596, 197, 955, 570, 709, 245, 867, 347, 953, 191, 268, 442, 249, 610, 486, 525, 834, 985, 353, 443, 840, 889, 606, 31, 459, 220, 695, 725, 258];
    let mk = [1918933, 3541871, 5367191, 8177207, 13413287, 8617753, 16482799, 637997546888497, 818030409780821, 1072039080450269, 1004843678320291, 1115141712472331, 1032376426518289, 958985624325359, 897355104115111, 909207636223351, 634950234842603, 1003636421258407, 1028279453914123, 750811524770693, 1041548821164679, 1015423398447347, 568993585251031, 703015189715341, 651039963438941, 1069266826561771, 628638171343969, 701926403641759, 865453089922907, 723838699860821, 730168297437521, 1111613955551009, 872447864446181, 789580776249227, 777112842082561, 716583208032199, 1099783476197993, 761365527314143, 874553915164663, 915155875093297, 771585006089413, 681080227610077, 648352830330449, 1085848716264937, 609570843233567, 578884069993919, 1037573374947757, 982522517944993, 725437567343773, 966920862085537, 866304179096309, 680519947090931];
    let ak = [1371117, 408838, 3920830, 7651117, 10637176, 3602396, 10645798, 138964171179166, 606750748470309, 433297185255245, 535265751317005, 178887405705973, 68704404861302, 41218827533975, 790184100777584, 365012727579282, 473880795844838, 1000055220646686, 742583407426601, 83508410161641, 104343564123378, 113614349667489, 466121620528209, 244113664297969, 646088926575929, 1003313594331878, 561265488149581, 359861655099164, 584051089999537, 50561456067072, 214533397325412, 335580653911014, 419549544816335, 566901804363201, 37662275177128, 410928244600321, 156651290007267, 642036029629601, 251823831380283, 552833273943688, 395675845359024, 6865363707243, 572982777642385, 234552073605133, 571434706046575, 158710732978719, 528910011968719, 122798040996377, 507860628377377, 259514572282796, 850467288348361, 77506961958359];

    println!("Hello!\nYour flag is on the way, just take a seat and wait a bit");
    for i in 0..gk.len() {
        print!("{}", hack_char(gk[i], mk[i], ak[i]));
        io::stdout().flush().unwrap();
    }

    let mut input = String::new();
    let _string = std::io::stdin().read_line(&mut input).ok().expect("Failed to read line");
}
